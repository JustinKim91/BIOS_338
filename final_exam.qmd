---
title: "BIOS 338/538 final exam"
format: 
  html:
    embed-resources: true
editor: visual
---

**Note**: About references

-   Include references in the plain text window (rather than as a comment within R chunks)

    -   Lack of adequate references (*where concepts are complex, and require searching around*) will be penalized with upto -5 points

## Points distribution

|       | 0   | Q1  | Q2  | Q3  | Q4  | sum           |
|-------|-----|-----|-----|-----|-----|---------------|
| Reg   | \-  | 11  | 14  | 11  | 11  | 36 (*not 47*) |
| Bonus | \-  | 2   | 2   | 1   | \-  | 5             |

## **Important message:**

1.  Answer question **Q2** first ;
2.  Then **choose 2 out of the 3** remaining questions to answer (2 out of **Q1, Q3, Q4**)
3.  Then spend time on the bonuses!

## 1. Describing, plotting, and interpreting data about MRI images of tumors (11 points + 2 bonus)

Concepts illustrated : *function -\> vectorization, t-test and interpretation*

```{r libraries}
library(tidyverse)
```

### 1.x. Load data (1 point)

load the `Tumor` dataset on your own by following these instructions

-   Put the file in a separate data/ folder within in your Rproject (`.Rproj`) containing folder

-   Load the `.csv` file using `relative path` starting from the folder this `.qmd` file is in

-   Use `echo: true` in the chunk option below to show us the code in your final output

```{r load_data}


```

### 1.a. write 1-3 sentences describing the data (1 point)

Here's where the data came from ([kaggle datasets](https://www.kaggle.com/datasets/jakeshbohaju/brain-tumor/data)) for context. *You may need to search the internet for some of the terms in order to explain them.*

url: <https://www.kaggle.com/datasets/jakeshbohaju/brain-tumor/data>

::: {.class style="color: firebrick"}
Write answer here
:::

### 1.b. Make scatterplots (3 points)

*Read full question 1.b. before answering!*

The goal here is to make three pairwise scatterplots of `Homogeneity`, `Energy` and `ASM`, `color`ed by whether the image was a `tumor` or not. You need to rename the legend to be more intuitive than 0 and 1.

Since the same commands need to be repeated multiple times, we will be more efficient and *try not to repeat code*. So

-   Make a function to generate these 3 plots with less code repetition (1 point). The function should take in the x and y column names to be plotted. Calling this function thrice with these 3 different pairs of column pairs makes the 3 plots (*You can add more function arguments if they are useful).*

    -   Reduce the transparency of the points so we can see overlapping points better

-   (1 point) Call this function in a vectorized manner using `purrr::` package commands on the 3 pairs of vectors and stitch the images together using the `patchwork` package (using hints from `class21a_linreg-continued.qmd`), Now, collect the legends to show only a single legend for all 3 plots. (1 point)

NOTE:

1.  You will need to change the binary variables to factors to get the proper scale.
2.  *We chose these variables to plot out of many more in the dataset because they are on a similar scale.*

```{r scatterplot-fn}


```

### 1.c.bonus. Plotting with scaling (2 points):

Try plotting Coarseness vs. Energy. Now plot again, but scale the variables. (1 point) Explain the significance of the `scale()` function and why it matters here (1 point)

```{r scaled-plot}

```

### 1.d. Do any patterns seem to emerge in the data? (1 point)

::: {.class style="color: firebrick"}
Answer here
:::

### 1.e. t-tests for tumor vs non-tumor (3 points)

Now we are looking for columns in the dataset that vary between tumor and non-tumour samples using t-tests to attach statistical significance.

#### 1.e.1. Do the bottom 2 segments using a function / vectorization to minimize code repetition (1 point)

#### 1.e.2. do t-test and justify the tails (1 point)

Run three t.tests to look at **differences** between tumor and non-tumor images using the Energy, Homogeneity, and ASM variables. Note that tumor is the group variable!

Explain if the best choice here is to do a one-tailed t-test or a 2-tailed t-test and what in the question guides you to this choice. *Note that 2.a.1 & 2 walks through the technical difference between these t-tests so you don't need to get into those here. Only need a brief answer here!*

```{r tumor t.tests}


```

#### 1.e.3. Add p-value onto plots (1 point)

Plot 1D [jitter](https://ggplot2.tidyverse.org/reference/geom_jitter.html) plots (y = Tumor, x = each of the variables) and indicate the mean with a line/other distinct shape (using `shape = '|'`) . Show the p-value between the

```{r plt-with-p-value}

```

### 1.f. Interpret results and reflect on future analysis ideas (2 points)

Interpret your results. How would you continue analyzing this data (no need to actually do it, but think about what else you could look at to better understand images with and without tumors (2 points)

::: {.class style="color: firebrick"}
Answer here
:::

## 2. General statistics conceptual questions (14+2 points total)

### 2.a. Understanding of t-tests (10 points)

We will do a short exercise to demonstrate your understanding of t-tests, and specifically the difference between a *one-tailed (one-sided)* and *two-tailed* t-test.

#### 2.a.1. t-test part 1 (3 points)

You treated 10 patients with a medicine, 10 more with a placebo and measure their health score (0 to 1). What hypothesis test (*give full detailed name of the test*) would you do to show that the medicine group has a **higher** health score compared to the placebo group. (1 point)

-   State in mathematical terms, what is the alternate hypothesis? (*hint: mentioned above in english)*

    -   Example: *H*~0~: *μ*~1~ = *μ*~2 from wikipedia/[null hypothesis](https://en.wikipedia.org/wiki/Null_hypothesis#Basic_definitions)/basic definitions~

-   State in English and mathematical form, what is the **null hypothesis**?

-   Is this a one tailed or two tailed test?

::: {.class style="color: firebrick"}
To show that the medicine group has a higher health score than the placebo group, I would use two-sample t-test.

-   For the alternative hypothesis:

    -   *H*~a~: *μ*~1~ \< *μ*~2~

    -   The alternative hypothesis states that the medicine group has a significantly higher health score when compared to the placebo group.

-   For the Null Hypothesis:

    -   *H*~0~: *μ*~1~ ≤ *μ*~2~

    -   The null hypothesis states that the health score of the medicine group is less than or equal to that of the placebo group.

-   This would be a one-tailed test as it has one critical region, specifically that the upper tail.
:::

Generate uniformly distributed data where the desired/theoretical means differ by *around* 0.3 for each of the two series above, print the data with the labels and demonstrate the `summary()` result of the correct t-test. Use `echo: true` so we can see your code in the report (2 points).

Note:

-   The health scores should be strictly between 0 and 1

-   There is some flexibility in how you can make the vectors here, all we want is their difference of means is 0.3

-   You can make the medicine to have a higher mean than the placebo but the other way around is fine too for this illustration. The *actual data will never exactly have the difference of means of 0.3 exactly*

```{r do-t-test, echo = TRUE}

# Use runif() to generate two uniformly distributed series between 0 and 1. I ran   ... ran the command until I got two series that the means differed by abour 0.27,  ... and just created the data series by placing the values in vectors. This was so  ... that when the code is run, it wouldn't generate another pair of random series.

group_medi <- runif(10, min = 0.7, max = 0.9)


group_placebo <- runif(10, min = 0.4, max = 0.6)


medi_data <- data.frame(
  group = rep(c("medicine", "placebo"), times = c(10,10)),
  score = c(group_medi, group_placebo)
)

t_medi <- t.test(score ~ group, data = medi_data, alternative = 'greater')

summary(t_medi)
t_medi
```

**Bonus:** Show a scatter plot of these two datasets showing their mean and overlay the p-value from the t-test along with what the null hypothesis was on the plot. (2 points)

```{r scatter_plot}
# library(tidyverse)
ggplot(medi_data,aes(x = group, y = score, color = group)) +
  geom_jitter(width = 0.2, size = 2) +
  stat_summary(fun = mean, geom = "point", shape = 10, size = 4, color = 'black') +
  theme(legend.position = 'none')

```

#### 2.a.2. t-test part 2 (3 points)

In this variation, a co-worker remarked she is testing a different molecule and is unsure if it works like a medicine or toxin yet. So how would you change the test to account for either of these possibilities? (2 points)

-   State, both in English and mathematical terms, what is the alternate hypothesis? (*hint: mentioned above in english)*

-   State in English and mathematical form, what is the **null hypothesis**?

-   Is this a one tailed or two tailed test?

::: {.class style="color: firebrick"}
This test would now be changed to be a two-tailed test. In the t-test, the upper critical limit would indicate that the medical scores of the medicine group is significantly greater than the placebo group, which would suggest that the molecule works as a medicine. On the other hand, the lower critical limit would indicate a significantly lower score for the medicine group suggesting a toxin-like mechanism.

-   Alternate Hypothesis:

    -   *H*~a~: *μ*~1~ **≠** *μ*~2~

    -   The health scores of the medicine and placebo group are not the same.

-   Null Hypothesis:

    -   *H*~0~: *μ*~1~ = *μ*~2~

    -   The health scores of medicine group and the placebo group are the same.

-   This is a two-tailed test
:::

-   How would you modify the t-test for the same data above for this new test? (1 point)

```{r co-workers-t-test}

# Change the alternative argument to 'two.sided'
t_medi2 <- t.test(score ~ group, data = medi_data, alternative = 'two.sided')

t_medi2
```

#### 2.a.3. t-test part 3 (4 points)

You have a similar experiment now but the same 10 patients are monitored with placebo and medicine (2.a.1) over two different weeks; assume the dataset is ordered such that 1st patient in placebo group matches the first patient in medicine group. How will you modify the t-test to capture that there are not 2 independent samples of patients in this case? (1 point)

```{r modify-t-test}

# Pair the health scores of the medicine and placebo group
t_medi_paired <- t.test(score ~ group, data = medi_data, alternative = 'two.sided', paired = TRUE)

t_medi_paired
```

::: {.class style="color: firebrick"}
The paired argument in `t.test()` is set to `'FALSE'` by default, which specifies that the samples being compared are independent from each other. However, if you change the argument to read `'TRUE'`, the t-test will understand that the samples are not independent from one another and that the data come from the same individuals.
:::

Show the above linked data as a graph with points of the same individual joined by a line (2 point2)

```{r plot-paired}
medi_data_wide <- medi_data %>% 
  group_by(group)

wider_data <- mutate(medi_data_wide, index = row_number()) %>% 
  pivot_wider(names_from = group,
              values_from = score)

ggplot(wider_data,
       aes(x = index)) +
  geom_point(aes(y = medicine, colour = 'blue')) +
  geom_point(aes(y = placebo, colour = 'red')) +
  geom_segment(wider_data,
               mapping = aes(y = medicine, yend = placebo)) +
  labs(x = "Participant", y = "Health Score") +
  scale_x_continuous(breaks = seq(0, 10, by = 1)) + # Set interval for x-axis
  theme(legend.position = 'none') +
  annotate('text', x = 5, y= 0.9, label = 'medicine', colour = 'brown1') +
  annotate('text', x = 5.5, y= 0.45, label = 'placebo', colour = 'cyan4')

```

::: {.class style="color: firebrick"}
References: <https://stackoverflow.com/questions/37950511/set-tick-mark-intervals>

<https://stackoverflow.com/questions/61912689/draw-a-line-between-two-data-points-from-separate-variables-in-ggplot>
:::

Can you re-create the same t-test as above (and the same p-value) with a one-sample t-test? (1 point)

```{r recreate-one-sample-t-test}
diff <- medicine - placebo

t.test(diff, mu = 0, alternative = 'two.sided')
```

::: {.class style="color: firebrick"}
In the one-sample t-test, I only use the sampling from when the participants were given actual medicine. In order to replicate the two-sampled t-test above, I found the difference in the health scores of the medicine and placebo group. Then, I ran the vector of differences as the subject of the t.test and set the theoretical mean value of the differences to 0. This essentially replicates the mechanism of the two-sampled t-test.

Reference: <http://www.sthda.com/english/wiki/one-sample-t-test-in-r>
:::

### 2.b. Explain the meaning of p-value (2 points)

What is a p-value for hypothesis tests? What is one common mis-interpretation of p-value, elaborate why it is inaccurate. (2 points) See controversies here: [wiki](https://en.wikipedia.org/wiki/Misuse_of_p-values#:~:text=Misuse%20of%20p%2Dvalues%20is,with%20a%20specified%20statistical%20model.), [nature](https://www-nature-com.ezproxy.rice.edu/articles/nature.2016.19503),

::: {.class style="color: firebrick"}
The p-value is the probability that the difference in means of two samples is a result of chance; thus, the lower the p-value, the lower the chances that the observed difference in means of two mean values is a random occurrence and actually has significance.

A common misconception is that the p-value is the probability that the null hypothesis is true. This is inaccurate, as the null hypothesis simply states that the values of comparison are not significantly different. Rather, the p-value describes the probability that the actual effect of variable is as extreme as the observed effect. So, if the null hypothesis is *actually* true, then the p-value would be greater than the critical value (0.05).

Reference: <https://en.wikipedia.org/wiki/Misuse_of_p-values>
:::

### 2.c. Know thy distribution (2 point)

-   Why is it important to know the distribution of our data before continuing analysis? (0.5 point)

::: {.class style="color: firebrick"}
It is important to know the distribution of your data to ensure that you can conduct accurate data analysis. Some statistical tests are ground in the assumption that the data being analyzed is normally distributed; if your data is non-normally distributed such tests would yield inaccurate analyses.

Reference: <https://machine-learning-made-simple.medium.com/why-you-should-analyze-the-distribution-of-your-data-695fd9f0f1be>
:::

-   Which of the statistical concepts discussed in class assume certain distributions for the data, which distribution and briefly why do they need this assumption? (1.5 point)

::: {.class style="color: firebrick"}
The t-test assumes that the data being analyzed is normally distributed. T-tests are used to compare specific traits or characteristics which represent groups; when the data depicting these traits are normal, the mean become the representative measurement of the central tendency of the trait. The t-test also happens to compare the difference in true means of the data being analyzed, thus it is important that the data being analyzed is normally distributed, and the t-test assumes as much.

Reference: <https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6676026/#:~:text=The%20purpose%20of%20the%20t,essential%20in%20the%20t%2Dtest.>
:::

## 3. Working with Principal Component Analysis and iris plants (again!) (11+1 points total)

#### Bringing in the data. DO NOT EDIT!

##### 3.x. bonus (+1 point) : explaining purpose of each library in this script

::: {.class style="color: firebrick"}
3.x. bonus: (+1 bonus) : identify and note what each library is for (along with 1 function used from each)

Answer here
:::

```{r bring in plant data}
library(corrr)
library(ggfortify)
library(dplyr)

data(iris)
iris_data <- as_tibble(iris)

```

### 3.a. Write 1-3 sentences describing the data (1 point).

::: {.class style="color: firebrick"}
Answer here
:::

### 3.b. Correlations between the variables (2 point).

#### 3.b.1. Calculate correlations between the variables. (1 point)

*Hint. You need to exclude the species column*

```{r correlations}
# hint
?correlate()

iris_corr <- iris_data[,-5] %>%
  correlate()
iris_corr
```

#### 3.b.2. Are any of the variables highly correlated? (absolute value of the correlation \>0.6) (1 point)

::: {.class style="color: firebrick"}
Answer here
:::

### 3.c. Running PCA and analyzing (8 points)

#### 3.c.1. Generate the PCA (4 points)

Run a PCA analysis using the `prcomp()` function. Create a screeplot that shows the proportion of variance explained by each variable, a biplot of PC1 and PC2, and give a summary of the results with the `summary()` function

*Hint. Remember to scale the variables and remove species column!*

```{r run PCA}
# run this line to see documentation for the function
?prcomp()

```

#### 3.c.2. Better plots with `autoplot()` (1 point)

Now, use the function `autoplot()` from `ggfortify` package to better view the results of the biplot. Be sure to include the loadings.

*Hint: You need to search for how to add loadings to this!*

```{r autoplot}

```

#### 3.d. Explain your results. (3 points)

Be sure to mention the following:

-   Which traits tend to load on the same components?

-   How many components do you need to include to explain at least 95% of the variance in the data?

-   Does the data cluster well into the known groups of species?

::: {.class style="color: firebrick"}
Answer here
:::

## 4. Analyzing housing data (11 points)

### 4.a. Loading data (1 point)

load the `housing_Final_Exam` dataset on your own, similar to the tumor data

-   Put the file in a separate data/ folder in your Rproject folder

-   Load the `.csv` file using `relative path` starting from the folder this `.qmd` file is in

Here's where the data came from ([kaggle datasets](https://www.kaggle.com/datasets/iamsouravbanerjee/house-rent-prediction-dataset)) for context. *You may need to search the internet to understand some of the terms.*

url: <https://www.kaggle.com/datasets/iamsouravbanerjee/house-rent-prediction-dataset>

```{r load-housing-data}

# housing <- read.csv('PATH_HERE')
```

(1 point) First take a look at the data! Look at all the columns and try to understand what they mean. Now, create a new column called 'price_per_area' that contains the price divided by the square footage of the house. Plot this new column as a histogram and describe it's relationship.

For our future plots, it may get confusing to have such larger numbers for our y axis. To simplify this, divide the sales price by a thousand with a new column called 'price_thousands'.

```{r create new price_per_area column}

```

```{r plot a histogram of the price per area distribution}

  
```

### 4.b. Data Investigation (3 points total)

Create three plots to investigate the relationship between *a different variable* and *house price*. One plot must be for a numeric variable and two for categorical variables. For the two categorical variables one must be a binary categorical variable. *Consider this carefully!* **Describe the relationship you see for each. All columns except price and area should be treated as factors! Properly label all axises along with the units!**

Axis labels should be like this with the units in the bracket: `length (cm)`

```{r numeric plot}


```

::: {.class style="color: firebrick"}
Answer here
:::

```{r binary categorical variable}

```

::: {.class style="color: firebrick"}
Answer here
:::

```{r second categorical variable}

```

::: {.class style="color: firebrick"}
Answer here
:::

### 4.c. Simple linear regression model (3 points)

Now you want to create the optimal model possible! You are confident that area is going to have the largest effect on sales price. Create a univariate linear regression model for `price_thousands` and `area`. Check to make sure the data meets the assumptions for linear regression. Show the output from the model.

-   **Describe the null and alternative hypothesis**

-   **Determine if we should accept or reject it.**

-   **Describe the relationship of the model (i.e. strong, weak, negative...)**

-   **Interpret the model that is produced. What are the coefficients and how do we interpret them?**

```{r model creation}

```

::: {.class style="color: firebrick"}
**Null:**

**Alternative:**

**Accept or Reject:**

**Relationship:**

**Interpretation of Model:**
:::

### 4.d. multivariate modelling (4 point)

#### 4.d.1. Choosing variables for multivariate linear regression (1 point)

Now that you are confident that area plays a significant role in affect a houses price, what are other variables that are important? To maintain the independency assumption of linear regression, we want to use variables that won't be directly correlated with area. What are some variables that are likely strongly correlated with area? **Explain your reasoning.**

::: {.class style="color: firebrick"}
Answer:
:::

#### 4.d.2. Multivariate modelling (3 point)

Add one of the variables that **is not correlated with area to your model.** Create a second linear regression model and once again show it's output.

-   **Describe the null and alternative hypothesis**

-   **Determine if we should accept or reject it.**

-   **Describe the relationship of the model (i.e. strong, weak, negative...)**

-   **Interpret the model that is produced. What are the coefficients and how do we interpret them?**

```{r}


```

::: {.class style="color: firebrick"}
**Null:**

**Alternative:**

**Accept or Reject:**

**Relationship:**

**Interpretation of Model:**
:::

# Attributions

## Questions

For the questions, I would like to acknowledge these sources of inspiration

-   Annie and Sam for making all these creative questions

-   Nice list of [css colours](https://duckduckgo.com/?t=ffab&q=css+colours&ia=answer&iax=answer) to format a `.class` of text in a particular colour to distinguish it from questions (*if you are curious, you can change the colour of all your answers from firebrick to something else by doing* `find-and-replace` in the `Source` mode! **+1 bonus point** for this)

## Solutions

::: {.class style="color: firebrick"}
Your attributions here!
:::

::: {style="color: teal"}
Space for TA/grader comments here!

(copy this in the middle of the code for more elaborate comments)
:::
